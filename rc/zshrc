if [ -z "$VIM" ]; then
  _trap_exit() { tmux kill-session -t $$; }
  trap _trap_exit EXIT

  if [ -z "$TMUX" ]; then
    tmux new-session -s $$;
  else
    export TERM="screen-256color"
  fi
fi

if [[ "$PROFILE" == "1" ]]; then
  zmodload zsh/zprof
  zmodload zsh/datetime

  t0=$EPOCHREALTIME
fi

export PATH=/Volumes/Data/bin:${HOME}/.jsvu:~/.local/bin:/usr/local/opt/ccache/libexec:/usr/local/bin:/usr/local/sbin:$PATH

export KEYTIMEOUT=10

autoload -U zutil      # [1]
autoload -U compinit   # [2]
autoload -U complist   # [3]

# either git or brew is slow here... ~500ms
#plugins=(git brew history-substring-search)

plugins=(history-substring-search)

# Set ZSH so oh-my-zsh finds its installation
ZSH=~/.oh-my-zsh

# !! slow 450ms :(
source $ZSH/oh-my-zsh.sh

source ~/.my_zsh_theme.sh

# Customize to your needs...

alias sz='source ~/.zshrc'
alias ez='vim ~/.zshrc'
alias ev='vim ~/.vimrc'
alias et='vim ~/.tmux.conf'
alias rn=react-native

alias :e=cd
alias g='git'
alias v='vim'
alias c='clear'
alias e='exit'
alias l='ls -la'
alias f='ls'
alias jsc='/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Helpers/jsc'

export EDITOR=vim
export VISUAL=vim

TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'

unsetopt nomatch
unsetopt correct_all


fpath=(/usr/local/share/zsh-completions $fpath)
source ~/dotfiles/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/dotfiles/zsh-history-substring-search/zsh-history-substring-search.zsh

bindkey -v

bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down
bindkey '^R' history-incremental-search-backward

bindkey -M vicmd '^P' history-substring-search-up
bindkey -M vicmd '^N' history-substring-search-down
bindkey -M vicmd '^R' history-incremental-search-backward

bindkey -M viins 'jk' vi-cmd-mode

alias ip="ipconfig getifaddr en0 || ipconfig getifaddr en1"
alias weather='curl http://wttr.in/london?m'

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# OCaml
alias ocaml="ledit ocaml"

export LC_ALL="en_US.UTF-8"

if [[ "$PROFILE" == "1" ]]; then
  function {
      t1=$EPOCHREALTIME
      startup=$(( t1 - t0 ))
      print "Shell startup time: $startup"
  }
  unset t0
fi
