" Required:
call plug#begin()

" Theme

" IDE features

" NeoBundle 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
" NeoBundle 'tpope/vim-fugitive'
" NeoBundle 'rizzatti/dash.vim'
" NeoBundle 'jpalardy/vim-slime'

" JavaScript
"NeoBundleLazy 'pangloss/vim-javascript', {'autoload':{'filetypes':['javascript']}}
"NeoBundleLazy 'tadeuzagallo/vim-jsx', {'autoload':{'filetypes':['javascript']}}
"NeoBundleLazy '1995eaton/vim-better-javascript-completion', {'autoload':{'filetypes':['javascript']}}
"NeoBundleLazy 'moll/vim-node', {'autoload':{'filetypes':['javascript']}}

" CPP
"NeoBundleLazy 'octol/vim-cpp-enhanced-highlight', {'autoload':{'filetypes':['cpp']}}

" Markdown
"NeoBundleLazy 'tpope/vim-markdown', { 'autoload': {'filetypes': ['markdown']} }

" Haskell
"NeoBundleLazy 'neovimhaskell/haskell-vim', { 'autoload': {'filetypes': ['haskell']} }
"NeoBundleLazy 'eagletmt/neco-ghc', { 'autoload': {'filetypes': ['haskell']} }

" OCaml
"NeoBundleLazy 'the-lambda-church/merlin', { 'do': './configure && make && make install', 'rtp': '/usr/local/share/ocamlmerlin/vim', 'autoload': {'filetypes': ['ocaml']} }
"NeoBundleLazy 'OCamlPro/ocp-indent', { 'autoload': {'filetypes': ['ocaml']} }

" Agda
"NeoBundleLazy 'derekelkins/agda-vim', { 'autoload': {'filetypes': ['agda']} }

" Coq
"NeoBundleLazy 'jvoorhis/coq.vim', { 'autoload': {'filetypes': ['coq']} }

"NeoBundleLazy  'keith/swift.vim', { 'autoload': {'filetypes': ['swift']} }

call plug#end()

let g:airline_powerline_fonts = 1


" spell check
set spell spelllang=en_us
hi clear SpellBad
hi clear SpellCap
hi clear SpellLocal
hi clear SpellRare
hi SpellBad cterm=underline
function! Trim()
  let lnum = line('.')
  let cnum = col('.')
  exe ':%s/\s\+$//e'
  exe 'normal ' . lnum . 'G'
  exe 'normal ' . cnum . '|'
endfunction

nnoremap <silent><leader><leader>t :call Trim()<CR>

nnoremap <silent><leader>b :buffers<CR>:buffer<Space>
nnoremap <silent> <F8> mmgg=G'm^

" pane navigation


" nerdtree

map <silent> <leader><tab> :NERDTreeToggle<CR>
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif


" merlin
nnoremap <silent> <localleader>g :MerlinLocate<CR>

" deoplete + vim-multiple-cursors interop issue
function g:Multiple_cursors_before()
    call deoplete#custom#buffer_option('auto_complete', v:false)
endfunction
function g:Multiple_cursors_after()
    call deoplete#custom#buffer_option('auto_complete', v:true)
endfunction

" Italic support
hi htmlArg gui=italic
hi Comment gui=italic
hi Type    gui=italic
hi htmlArg cterm=italic
hi Comment cterm=italic
hi Type    cterm=italic
